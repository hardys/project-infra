prowjob_namespace: default
pod_namespace: test-pods

plank:
  job_url_prefix_config:
    '*': https://prow.apps.ci.metal3.io/view/gcs/
  default_decoration_config:
    utility_images:
      clonerefs: "gcr.io/k8s-prow/clonerefs:v20191219-ecbeba384"
      initupload: "gcr.io/k8s-prow/initupload:v20191219-ecbeba384"
      entrypoint: "gcr.io/k8s-prow/entrypoint:v20191219-ecbeba384"
      sidecar: "gcr.io/k8s-prow/sidecar:v20191219-ecbeba384"
    gcs_configuration:
      bucket: metal3-prow-artifacts
      path_strategy: explicit
    gcs_credentials_secret: gcs-credentials

tide:
  merge_method:
    metal3-io/project-config: merge
  queries:
  - repos:
    - metal3-io/baremetal-operator
    - metal3-io/base-image
    - metal3-io/cluster-api-provider-baremetal
    - metal3-io/ironic-hardware-inventory-recorder-image
    - metal3-io/ironic-client
    - metal3-io/ironic-image
    - metal3-io/ironic-inspector-image
    - metal3-io/ironic-ipa-downloader
    - metal3-io/ironic-prometheus-exporter
    - metal3-io/metal3-dev-env
    - metal3-io/metal3-docs
    - metal3-io/metal3-helm-chart
    - metal3-io/metal3-io.github.io
    - metal3-io/metal3-smart-exporter
    - metal3-io/project-infra
    - metal3-io/static-ip-manager-image
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
  context_options:
    # Use branch protection options to define required and optional contexts
    from-branch-protection: true

deck:
  spyglass:
    viewers:
      "started.json|finished.json":
      - "metadata"
      "build-log.txt":
      - "buildlog"
      "clone-log.txt":
      - "buildlog"

presubmits:
  metal3-io/baremetal-operator:
  - name: gofmt
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/gofmt.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/library/golang:1.12
        imagePullPolicy: Always
  - name: gosec
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/gosec.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/securego/gosec:latest
        imagePullPolicy: Always
  - name: govet
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/govet.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/library/golang:1.12
        imagePullPolicy: Always
  - name: markdownlint
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/markdownlint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/pipelinecomponents/markdownlint:latest
        imagePullPolicy: Always
  - name: shellcheck
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/shellcheck.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: koalaman/shellcheck-alpine:stable
        imagePullPolicy: Always
  - name: unit
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/unit.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        - name: DEPLOY_KERNEL_URL
          value: "http://172.22.0.1/images/ironic-python-agent.kernel"
        - name: DEPLOY_RAMDISK_URL
          value: "http://172.22.0.1/images/ironic-python-agent.initramfs"
        - name: IRONIC_ENDPOINT
          value: "http://localhost:6385/v1/"
        - name: IRONIC_INSPECTOR_ENDPOINT
          value: "http://localhost:5050/v1/"
        image: registry.hub.docker.com/library/golang:1.12
        imagePullPolicy: Always

  metal3-io/cluster-api-provider-baremetal:
  - name: gofmt
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/gofmt.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/library/golang:1.12
        imagePullPolicy: Always
  - name: govet
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/govet.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/library/golang:1.12
        imagePullPolicy: Always
  - name: markdownlint
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/markdownlint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/pipelinecomponents/markdownlint:latest
        imagePullPolicy: Always
  - name: shellcheck
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/shellcheck.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: koalaman/shellcheck-alpine:stable
        imagePullPolicy: Always
  - name: unit-v1alpha1
    always_run: true
    decorate: true
    branches:
      - ^v1alpha1*$
    spec:
      containers:
      - args:
        - ./hack/unit.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/metal3-io/capbm-unit:v1alpha1
        imagePullPolicy: Always
  - name: unit
    always_run: true
    decorate: true
    skip_branches:
      - ^v1alpha1*$
    spec:
      containers:
      - args:
        - ./hack/unit.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/metal3-io/capbm-unit:master
        imagePullPolicy: Always

  metal3-io/metal3-dev-env:
  - name: shellcheck
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/shellcheck.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: koalaman/shellcheck-alpine:stable
        imagePullPolicy: Always
  - name: markdownlint
    always_run: true
    decorate: true
    spec:
      containers:
      - args:
        - ./hack/markdownlint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: registry.hub.docker.com/pipelinecomponents/markdownlint:latest
        imagePullPolicy: Always

  metal3-io/project-infra:
  - name: check-prow-config
    always_run: true
    decorate: true
    spec:
      containers:
      - image: gcr.io/k8s-prow/checkconfig:v20191219-ecbeba384
        args:
        - "/checkconfig"
        - "--config-path"
        - "prow/config/config.yaml"
        - "--plugin-config"
        - "prow/config/plugins.yaml"
        - "--strict"
        resources:
          requests:
            memory: "500Mi"
